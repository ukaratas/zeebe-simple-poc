@page "/workflow/apply/{Email}"

@using zeebe_poc.Services;
@using System.Text.Json;
@using System.Text.Json.Serialization;
@using Microsoft.Extensions.Logging;


@inject IZeebeService _zeebeService
@inject IBusinessService _businessService
@inject IClientEventService _clientEventService
@inject NavigationManager _navigationManager

@inject ILogger<Apply> _logger;


<h1>Apply Form </h1>

<p>With this form process will created than form data will submitted to process.</p>


<EditForm Model="@applyModel" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />


      <p>
        <label>
            Full Name:
            <InputText @bind-Value="applyModel.FullName" />
        </label>
    </p>

    <p>
        <label>
            EMail:
            <InputText @bind-Value="applyModel.Email" />
        </label>
    </p>
    <p>
        <label>
            Your Request:
            <InputSelect @bind-Value="applyModel.Request">
                <option value="Hug">Hug</option>
                <option value="Kiss">Kiss</option>
            </InputSelect>
        </label>
    </p>
    <p>
        <label>
            Donation $:
            <InputNumber @bind-Value="applyModel.Donation" />
        </label>
    </p>

    <button class="btn btn-primary" type="submit">Apply</button>
   
</EditForm>

@code {

     [Parameter]
    public string Email { get; set; }


    private ApplyModel applyModel = new ApplyModel() { Donation = 10 } ;
    
    protected override void OnInitialized()
    {
        applyModel.Email = Email;

       _clientEventService.SubcribeMeForClientEvent( (command, state, payload) => 
       {
          if (command == "Route")
          {
            _navigationManager.NavigateTo(payload["Route"].ToString());
          }
       });
    }
    

    private void HandleValidSubmit()
    {
        applyModel.InstanceId = Guid.NewGuid().ToString();
        applyModel.EventingConnectionId = _clientEventService.ConnectionId();
        
        string jsonText = JsonSerializer.Serialize(applyModel, new JsonSerializerOptions
        {
            Converters =
            {
                new JsonStringEnumConverter()
            }
        });

        _zeebeService.SendMessage(applyModel.InstanceId, "MessageStart", jsonText);
    }

   
 }
